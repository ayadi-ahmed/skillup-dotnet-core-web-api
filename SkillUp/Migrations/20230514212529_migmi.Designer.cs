// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SkillUp.Models;

#nullable disable

namespace SkillUp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230514212529_migmi")]
    partial class migmi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SkillUp.Models.Achat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CandidatId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("trainingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CandidatId");

                    b.HasIndex("trainingId");

                    b.ToTable("achats");
                });

            modelBuilder.Entity("SkillUp.Models.Candidat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("candidats");
                });

            modelBuilder.Entity("SkillUp.Models.Manager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateNaissance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mdp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("role")
                        .HasColumnType("integer");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("managers");
                });

            modelBuilder.Entity("SkillUp.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("trainingCenterid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("trainingCenterid");

                    b.ToTable("trainings");
                });

            modelBuilder.Entity("SkillUp.Models.TrainingCenter", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("TrainingCenterid")
                        .HasColumnType("integer");

                    b.Property<string>("addresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dateCreation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("etatDemandeInscription")
                        .HasColumnType("integer");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("managerId")
                        .HasColumnType("integer");

                    b.Property<string>("matriculeFiscale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("rib")
                        .HasColumnType("bigint");

                    b.Property<int>("tel")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("TrainingCenterid");

                    b.HasIndex("managerId");

                    b.ToTable("trainingCenters");
                });

            modelBuilder.Entity("SkillUp.Models.Achat", b =>
                {
                    b.HasOne("SkillUp.Models.Candidat", "Candidat")
                        .WithMany("achats")
                        .HasForeignKey("CandidatId");

                    b.HasOne("SkillUp.Models.Training", "training")
                        .WithMany("achats")
                        .HasForeignKey("trainingId");

                    b.Navigation("Candidat");

                    b.Navigation("training");
                });

            modelBuilder.Entity("SkillUp.Models.Training", b =>
                {
                    b.HasOne("SkillUp.Models.TrainingCenter", "trainingCenter")
                        .WithMany("training")
                        .HasForeignKey("trainingCenterid");

                    b.Navigation("trainingCenter");
                });

            modelBuilder.Entity("SkillUp.Models.TrainingCenter", b =>
                {
                    b.HasOne("SkillUp.Models.TrainingCenter", null)
                        .WithMany("trainingCenters")
                        .HasForeignKey("TrainingCenterid");

                    b.HasOne("SkillUp.Models.Manager", "manager")
                        .WithMany("trainingCenters")
                        .HasForeignKey("managerId");

                    b.Navigation("manager");
                });

            modelBuilder.Entity("SkillUp.Models.Candidat", b =>
                {
                    b.Navigation("achats");
                });

            modelBuilder.Entity("SkillUp.Models.Manager", b =>
                {
                    b.Navigation("trainingCenters");
                });

            modelBuilder.Entity("SkillUp.Models.Training", b =>
                {
                    b.Navigation("achats");
                });

            modelBuilder.Entity("SkillUp.Models.TrainingCenter", b =>
                {
                    b.Navigation("training");

                    b.Navigation("trainingCenters");
                });
#pragma warning restore 612, 618
        }
    }
}
